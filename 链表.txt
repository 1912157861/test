#include<iostream>
using namespace std;

typedef struct LNode{
	int data;
	struct LNode* next;
}LNode , * ListNode;

void InitList(ListNode &L){
	L = new LNode;
	if (L == NULL)
		return;
	L->next = NULL;
}

void InsertList(ListNode &L){//头插法创建链表
	ListNode p;
	int n;
	cout << "请输入您想要创建链表中元素的个数为:";
	cin >> n;
	cout << "请输入链表中的元素:" << endl;
	while (n--){
		p = new LNode;
		cin >> p->data;
		p->next = L->next;
		L->next = p;
	}
	if (L->next == NULL){
		cout << "链表创建失败" << endl;
	}
	else
		cout << "链表创建成功" << endl;
}

ListNode DeleteList(ListNode &L){
	ListNode n = L;
	while (n->next != NULL){
		ListNode s = n->next;
		/*ListNode p = n->next;*/
		while (s->next != NULL){
			/*ListNode m = s->next;*/
			if (n->next->data == s->next->data){
				ListNode p = s->next;
				s->next = s->next->next;
				delete p;
			}
			else{
				s = s->next;
			}
		}
		n = n->next;
	}
	return L;
}

void PrintList(ListNode L){
	ListNode k = L->next;
	while (k != NULL){
		cout << k->data << ' ';
		k = k->next;
	}
	cout << endl;
}

int main(){
	ListNode L;
	InitList(L);
	InsertList(L);
	ListNode m = DeleteList(L);
	PrintList(m);
}